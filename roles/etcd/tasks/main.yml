---
- name: resolve platform specific vars
  include_vars: "{{item}}"
  with_first_found:
    - files:
        - "{{ansible_distribution}}-{{ansible_distribution_release}}.yml"
        - "{{ansible_distribution}}.yml"
        - "{{ansible_os_family}}.yml"
      skip: true
      paths:
        - '{{role_path}}/vars'

- name: install common pkgs...
  become: '{{unarchive_deps_privilege_escalation | default(True)}}'
  become_user: root
  with_items:
    - '{{unarchive_deps_all_pkgs}}'
    - '{{unarchive_deps_tar_pkg|default("tar")}}'
    - '{{unarchive_deps_xz_pkg|default("xz")}}'
  package:
    name: '{{item}}'
    state: present
    
- name: check for installation of etcd
  become: yes
  stat:
    path: '{{etcd_install_dir}}/{{etcd_name}}'
  changed_when: false
  register: etcd_binary_dir

- when: not etcd_binary_dir.stat.exists
  block:
    - name: download etcd
      become: yes
      become_user: root
      get_url:
        url: '{{etcd_tgz_url}}'
        dest: /tmp/{{etcd_tgz}}
        checksum: '{{etcd_checksum}}'
        timeout: '{{etcd_download_timeout_seconds}}'
        mode: 0644
    - name: unachive etcd
      become: yes
      become_user: root
      unarchive:
        remote_src: yes
        src: /tmp/{{etcd_tgz}}
        dest: '{{etcd_install_dir}}'
        creates: '{{etcd_install_dir}}/{{etcd_name}}'
  always:
    - name: delete archive
      become: yes
      become_user: root
      file:
        path: /tmp/{{etcd_tgz}}
        state: absent

- name: link etcd and etcdctl
  become: yes
  become_user: root
  file:
    src: '{{etcd_install_dir}}/{{etcd_name}}/{{item}}'
    dest: '{{etcd_install_dir}}/{{item}}'
    state: link
  with_items:
    - etcd
    - etcdctl
