---
- hosts: all
  tags: always

- hosts: pg-master
  become: true
  roles:
    - role: postgres
      enable_pgbouncer: true
      pgbouncer_listen_port: "{{ pg_dialog_port }}"
      postgresql_pg_hba_custom:
        - { type: host,
            database: "{{ pg_dialog_db }}",
            user: "{{ pg_dialog_user }}",
            address: "{{ hostvars[groups['dialog-servers'][0]]['ansible_default_ipv4']['address'] }}/32",
            method: "md5" }

- hosts: pg-slave
  become: true
  roles:
    - role: postgres
      postgresql_init_slave: true

- hosts: cassandra
  strategy: free
  become: true
  roles:
    - role: cassandra

- hosts: etcd-masters
  become: true
  roles:
    - role: etcd-cluster
      etcd_master_group_name: etcd-masters
      etcd_cluster_name: dlg-etcd
      etcd_secure: false
      when: dlg_cluster
- hosts: etcd-lb
  become: true
  roles:
    - role: haproxy
      haproxy_frontend:
        - name: tcp
          bind:
            - listen: ':2378'
          mode: http
          default_backend: etcd
      haproxy_backend:
        - name: etcd
          mode: http
          balance: roundrobin
          servers_group:
            - name: "etcd"
              group: "{{ groups['etcd'] }}"
              port: 2379
              param:
                - check
      when: dlg_cluster

- hosts: dialog-servers
  become: true
  roles:
    - role: dlg-server
      dlg_server_image: dialog-docker-registry.bintray.io/server:latest
      project_name: "My Dialog"
      server_license: ""
      dlg_custom_conf:
        session.idle-timeout: 5 minutes
        modules.sequence.weak-history-updates: true
        akka.log-dead-letters-during-shutdown: "off"
        modules.presence.deliver-state-interval: "10m"
        modules.sequence.max-difference-size: "300 KiB"
        modules.runtime.delivery.max-interval: "5 minutes"
        akka.http.client.parsing.max-response-reason-length: 2048
        akka.actor.default-dispatcher.fork-join-executor.parallelism-min: 128
        akka.actor.default-dispatcher.fork-join-executor.parallelism-max: 500
      postgres_hosts: "{{groups['postgresql']}}"
      cassandra_hosts: "{{groups['cassandra']}}"
      tags: 'dialog-server'

- hosts: endpoints
  become: true
  roles:
    - role: haproxy
      #haproxy_ssl_map:
      #  - src: "{{ playbook_dir }}/files/haproxy/ssl/cert.pem"
      #    dest: "/etc/haproxy/ssl/cert.pem"
      haproxy_frontend:
        - name: tcp
          bind:
            - listen: ':{{ mobile_port }}'
      #        param:
      #          - ssl
      #          - 'crt /etc/haproxy/ssl/cert.pem'
          mode: tcp
          default_backend: tcp_dlg
        - name: ws
          bind:
            - listen: ':{{ desktop_port }}'
          mode: http
          default_backend: ws_dlg
      haproxy_backend:
        - name: tcp_dlg
          mode: tcp
          balance: roundrobin
          servers_group:
            - name: "tcp_dlg"
              group: "{{ groups['dialog-servers'] }}"
              port: 9070
              param:
                - check
        - name: ws_dlg
          mode: http
          balance: roundrobin
          servers_group:
            - name: "ws_dlg"
              group: "{{ groups['dialog-servers'] }}"
              port: 9080
              param:
                - check
          # OR
          # server:
          #   - name: "dlg-server-1"
          #     listen: "1.2.3.4:9070"
          #     param:
          #       - check
      tags: 'endpoints'

- hosts: web-frontend
  become: true
  roles:
    - role: nginx
      nginx_remove_default_vhost: true
      nginx_upstreams:
        - name: dialog-9090
          strategy: "least_conn"
          keepalive: 30
          servers_group: "{{ groups['dialog-servers'] }}"
          port: 9090
      nginx_vhosts:
        - listen: "80"
          server_name: "{{ api_uri }}"
          filename: "dialog.conf"
          extra_parameters: "{{ nginx_dialog_extra }}"

  tags:
    - web
    - web-frontend

- hosts: web-backend
  become: true
  roles:
    - role: dlg-web
      dlg_dashboard_envs:
        ENDPOINT: "http://{{ api_uri }}"
  tags:
    - web
    - web-backend
